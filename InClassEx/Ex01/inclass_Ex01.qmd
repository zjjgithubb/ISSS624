---
title: "In-class Ex 1"
date: "18 Nov 23"
date-modified: "last-modified" 

format: html
execute: 
  echo: true
  eval: true
  warning: false
  
editor: visual 
---

## Getting Started

Using pacman to load the required packages.

-   tmap - for thematic mapping

-   sf - for geospatial data handling

-   tidyverse - for non-spatial data handling

```{r}

pacman::p_load(sf, tmap, tidyverse)
```

## Importing kml file

Using the data from LTA on the Location of the Bus Stops in Singapore

Available at: <https://datamall.lta.gov.sg/>

Current data is based on Jul 23 (updated quarterly).

```{r}

busstops = st_read(dsn = "data/geospatial", 
               layer = "BusStop") %>%
  st_transform (crs = 3414)
```

```{r}
plot(busstops)
```

## Bus Origin and Destination Data

We will also import the *Passengers, Origin and Destination* data by using the *readr package* and *read_csv*.

```{r}

odbus_aug <- read_csv("data/aspatial/origin_destination_bus_202308.csv")

odbus_sep <- read_csv("data/aspatial/origin_destination_bus_202309.csv")

odbus_oct <- read_csv("data/aspatial/origin_destination_bus_202310.csv")

head(odbus_aug, n=5)
```

We need to convert the Origin_PT_Code data into factor to allow R to manipulate the data more easily.

```{r}

odbus_aug$ORIGIN_PT_CODE <- as.factor(odbus_aug$ORIGIN_PT_CODE)

odbus_aug$DESTINATION_PT_CODE <- as.factor(odbus_aug$DESTINATION_PT_CODE)
```

Filter the time between 7 am to 9 am (just before 10am) on Weekdays, Group by the Origin Bus Stops.

```{r}

origtrip_7_9 <- odbus_aug %>%
  filter(DAY_TYPE == "WEEKDAY") %>%
  filter(TIME_PER_HOUR >= 7 &
           TIME_PER_HOUR <= 9) %>%
  group_by(ORIGIN_PT_CODE) %>%
  summarise (TRIPS = sum(TOTAL_TRIPS))
```

## Map Planning Sub-zone 2019

We will also import that Map Planning Sub-zone 2019 data. Need to transform the coordinates to 3414, which will be in metres instead of decimal/degrees.

```{r}

mpsz19 = st_read(dsn = "data/geospatial", 
               layer = "MPSZ-2019") %>%
  st_transform (crs = 3414)

head(mpsz19, n=5)

plot(mpsz19)
```

## Joining the data of the Bus Stop Code, Location and which Planning Sub-zone

Using sf_intersection to join the data.

```{r}

busstop_mpsz <- st_intersection(busstops, mpsz19) %>%
  select(BUS_STOP_N, SUBZONE_C) %>%
  st_drop_geometry()
```

-   `st_intersection()` is used to perform point and polygon overly and the output will be in point sf object.

-   `select()` of dplyr package is then use to retain only BUS_STOP_N and SUBZONE_C in the busstop_mpsz sf data frame.

-   five bus stops are excluded in the resultant data frame because they are outside of Singapore boundary.

Save the output into rds format.

```{r}

write_rds(busstop_mpsz, "data/rds/busstop_mpsz.csv")  
```

Append the data

```{r}

origin_data <- left_join(origtrip_7_9 , busstop_mpsz,
            by = c("ORIGIN_PT_CODE" = "BUS_STOP_N")) %>%
  rename(ORIGIN_BS = ORIGIN_PT_CODE,
         ORIGIN_SZ = SUBZONE_C)
```

To check for duplicating records:

```{r}

duplicate <- origin_data %>%
  group_by_all() %>%
  filter(n()>1) %>%
  ungroup()
```

If there are, can use the following to retain the unique records:

```{r}

origin_data <- unique(origin_data)
```

To check if the duplicating records are fully addressed:

```{r}

mpsz_origtrip <- left_join(mpsz19, 
                           origin_data,
                           by = c("SUBZONE_C" = "ORIGIN_SZ"))

```

## Visualisation of the Data 

Using tmap

```{r}

tm_shape(mpsz_origtrip)+
  tm_fill("TRIPS", 
          style = "quantile", 
          palette = "Blues",
          title = "Passenger trips") +
  tm_layout(main.title = "Passenger trips generated at planning sub-zone level",
            main.title.position = "center",
            main.title.size = 1.2,
            legend.height = 0.45, 
            legend.width = 0.35,
            frame = TRUE) +
  tm_borders(alpha = 0.5) +
  tm_compass(type="8star", size = 2) +
  tm_scale_bar() +
  tm_grid(alpha =0.2) +
  tm_credits("Source: Planning Sub-zone boundary from Urban Redevelopment Authorithy (URA)\n and Population data from Department of Statistics DOS", 
             position = c("left", "bottom"))
```
